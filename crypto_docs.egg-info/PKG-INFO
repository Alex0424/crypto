Metadata-Version: 2.4
Name: crypto-docs
Version: 0.1.0
Summary: Cryptocurrency documentation site
Author-email: Alex <alex@example.com>
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Provides-Extra: mkdocs
Requires-Dist: mkdocs>=1.5.0; extra == "mkdocs"
Requires-Dist: mkdocs-material>=9.0.0; extra == "mkdocs"
Requires-Dist: mkdocs-git-revision-date-localized-plugin>=1.2.0; extra == "mkdocs"
Requires-Dist: mkdocs-awesome-pages-plugin>=2.9.0; extra == "mkdocs"
Requires-Dist: mkdocs-minify-plugin>=0.7.0; extra == "mkdocs"
Requires-Dist: mkdocs-redirects>=1.2.0; extra == "mkdocs"
Requires-Dist: pymdown-extensions>=10.0.0; extra == "mkdocs"
Requires-Dist: pillow>=9.0.0; extra == "mkdocs"
Requires-Dist: cairosvg>=2.5.0; extra == "mkdocs"

# Crypto Documentation

A comprehensive cryptocurrency and blockchain documentation site built with MkDocs Material.

## 🚀 Quick Start

### Prerequisites

- Python 3.8+
- [uv](https://docs.astral.sh/uv/) (fast Python package manager)

### Installation

1. **Install uv** (if not already installed):
   ```bash
   curl -LsSf https://astral.sh/uv/install.sh | sh
   ```

2. **Clone the repository**:
   ```bash
   git clone <repository-url>
   cd crypto
   ```

3. **Create and activate a virtual environment**:
   ```bash
   # Create virtual environment
   uv venv crypto-docs-env
   
   # Activate virtual environment
   source crypto-docs-env/bin/activate  # Linux/macOS
   # or
   crypto-docs-env\Scripts\activate     # Windows
   ```

4. **Install dependencies**:
   ```bash
   # Install MkDocs and all documentation dependencies
   uv pip install .[mkdocs]
   ```

### Running the Documentation

1. **Start the development server**:
   ```bash
   mkdocs serve
   ```

2. **Open your browser** and navigate to `http://localhost:8000`

3. **Build for production**:
   ```bash
   mkdocs build
   ```

## 📚 Documentation Structure

```
docs/
├── index.md                    # Home page
├── getting-started/
│   ├── introduction.md         # Crypto basics
│   ├── installation.md         # Setup guide
│   └── quick-start.md          # Quick tutorial
├── blockchain/
│   ├── what-is-blockchain.md   # Blockchain fundamentals
│   ├── consensus-mechanisms.md # Consensus algorithms
│   └── cryptographic-hashing.md # Hashing concepts
├── crypto/
│   ├── bitcoin.md              # Bitcoin guide
│   ├── ethereum.md             # Ethereum guide
│   └── altcoins.md             # Alternative cryptocurrencies
├── smart-contracts/
│   ├── introduction.md         # Smart contract basics
│   ├── solidity.md             # Solidity programming
│   └── deployment.md           # Contract deployment
├── defi/
│   ├── overview.md             # DeFi introduction
│   ├── dex.md                  # Decentralized exchanges
│   ├── lending.md              # Lending protocols
│   └── yield-farming.md        # Yield farming strategies
├── nfts/
│   ├── introduction.md         # NFT basics
│   ├── standards.md            # Token standards
│   └── marketplaces.md         # NFT marketplaces
├── security/
│   ├── wallet-security.md      # Wallet security
│   ├── smart-contract-security.md # Contract security
│   └── best-practices.md       # Security best practices
└── stylesheets/
    └── extra.css               # Custom crypto theme
```

## 🎨 Features

- **Crypto-themed design** with purple and gold color scheme
- **Dark/light mode** toggle
- **Responsive design** for mobile and desktop
- **Search functionality** with highlighting
- **Git integration** for edit dates and contributors
- **Code syntax highlighting** for multiple languages
- **Mathematical expressions** with MathJax
- **Interactive diagrams** with Mermaid
- **Custom styling** for crypto-specific content

## 📦 Dependencies

The project uses the following main dependencies (installed via `uv pip install .[mkdocs]`):

### Core MkDocs
- `mkdocs>=1.5.0` - Static site generator
- `mkdocs-material>=9.0.0` - Material Design theme

### Plugins
- `mkdocs-git-revision-date-localized-plugin` - Git-based page dates
- `mkdocs-awesome-pages-plugin` - Enhanced navigation
- `mkdocs-minify-plugin` - HTML/CSS/JS minification
- `mkdocs-redirects` - URL redirects

### Extensions
- `pymdown-extensions` - Enhanced Markdown features
- `pillow` - Image processing
- `cairosvg` - SVG support

## 🛠️ Development

### Project Structure
```
crypto/
├── docs/                   # Documentation source
├── mkdocs.yml             # MkDocs configuration
├── pyproject.toml         # Python project configuration
└── README.md              # This file
```

### Adding Content

1. **Create new pages** in the `docs/` directory
2. **Update navigation** in `mkdocs.yml`
3. **Use Markdown** with Material Design extensions
4. **Add custom styling** in `docs/stylesheets/extra.css`

### Custom Styling

The documentation includes custom CSS for crypto-specific styling:
- Crypto-themed color variables
- Custom card layouts
- Blockchain visualization styles
- Transaction styling
- Security warning boxes
- Price indicators

## 🔧 Configuration

### MkDocs Configuration (`mkdocs.yml`)

Key configuration sections:
- **Theme**: Material Design with crypto colors
- **Navigation**: Organized by topic
- **Plugins**: Enhanced functionality
- **Extensions**: Markdown enhancements
- **Extra**: Social links and analytics

### Python Configuration (`pyproject.toml`)

- **Build system**: Setuptools
- **Project metadata**: Name, version, description
- **Optional dependencies**: MkDocs group for easy installation

## 🚨 Security

This documentation includes security best practices:
- Wallet security guidelines
- Smart contract security considerations
- Private key management
- Phishing prevention
- Hardware wallet recommendations

## 🤝 Contributing

1. **Fork the repository**
2. **Create a feature branch**
3. **Make your changes**
4. **Test locally** with `mkdocs serve`
5. **Submit a pull request**

## 📄 License

This project is licensed under the MIT License - see the LICENSE file for details.

## 🆘 Support

- **Issues**: Report bugs and request features
- **Discussions**: Ask questions and share ideas
- **Documentation**: Comprehensive guides and tutorials
- **Community**: Join our Discord server

---

*Built with ❤️ and powered by MkDocs Material*

